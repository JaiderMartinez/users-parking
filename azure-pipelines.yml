# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop
- master
- feature/pipeline

pool:
  vmImage: ubuntu-latest

variables:
  -name: VERSION_IMAGE
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }} :
   value: 1.0-SNAPSHOT
  ${{ elseif eq(variables['Build.SourceBranch'], 'refs/heads/master') }} :
   value: latest
  ${{ else}} :
   value: 1.0-SNAPSHOT
  -name: DOCKER_USERNAME
  value: ${{ variables['DOCKER_USERNAME'] }}
  -name: DOCKER_PASSWORD
  value: ${{ variables['DOCKER_PASSWORD'] }}
steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: Docker@2
  inputs:
    command: 'build'
    Dockerfile: 'deployment/Dockerfile'
    tags: $(VERSION_IMAGE)

- task: Docker@2
  inputs:
      command: 'push'
      tags: '$(VERSION_IMAGE)'
      repository: jaider18/users-parking
      username: $(DOCKER_USERNAME)
      password: $(DOCKER_PASSWORD)